{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/participante.model.ts","webpack:///src/app/models/sesion.model.ts","webpack:///src/app/pages/bienvenido/bienvenido.component.ts","webpack:///src/app/pages/bienvenido/bienvenido.component.html","webpack:///src/app/pages/participante/participante.component.ts","webpack:///src/app/pages/participante/participante.component.html","webpack:///src/app/pages/sesion/sesion.component.ts","webpack:///src/app/pages/sesion/sesion.component.html","webpack:///src/app/services/participante.service.ts","webpack:///src/app/services/sesion.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","ParticipanteModel","SesionModel","BienvenidoComponent","sesionService","router","sesion","listarSesiones","form","fire","text","allowOutsideClick","icon","showLoading","peticion","crearSesion","subscribe","res","nombre","onClose","navigate","hideLoading","sesiones","guardarSesion","ParticipanteComponent","participanteService","route","participante","opciones","valor","sesionId","snapshot","paramMap","get","participanteId","getSesion","i","voto","actualizarVoto","SesionComponent","objectKeys","Object","pregunta","undefined","trim","preguntaSesion","actualizarSesion","part","agregarParticipante","nuevoParticipante","location","href","actualizarPregunta","ParticipanteService","http","firebaseDatabase","url","participanteTmp","put","post","providedIn","SesionService","pipe","name","sesionTmp","list","snapshotChanges","forEach","dato","reg","payload","toJSON","key","fila","push","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router'\nimport { SesionComponent } from 'src/app/pages/sesion/sesion.component'\nimport { BienvenidoComponent } from 'src/app/pages/bienvenido/bienvenido.component'\nimport { ParticipanteComponent } from 'src/app/pages/participante/participante.component'\n\nconst routes: Routes = [\n  { path: 'bienvenido', component: BienvenidoComponent },\n  { path: 'sesion/:id', component: SesionComponent },\n  { path: 'sesion/:sesionid/participante/:participanteid', component: ParticipanteComponent },\n  // { path: 'participante/:id', component: SesionComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'bienvenido' }\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot( routes )\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cardvote';\n  \n  constructor(\n  ) {} \n\n}\n","<div class=\"mt-5\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { environment } from '../environments/environment';\n\nimport { SesionComponent } from './pages/sesion/sesion.component';\nimport { BienvenidoComponent } from './pages/bienvenido/bienvenido.component';\nimport { ParticipanteComponent } from './pages/participante/participante.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SesionComponent,\n    BienvenidoComponent,\n    ParticipanteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule, \n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class ParticipanteModel {\n    id: string;\n    nombre: string;\n    voto: string;\n}","import { ParticipanteModel } from './participante.model';\n\nexport class SesionModel {\n    id: string;\n    admin: string;\n    nombre: string;\n    pregunta: string;\n    participante: ParticipanteModel[]\n}","import { Component, OnInit } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport Swal from 'sweetalert2'\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs'\n\nimport { SesionModel } from 'src/app/models/sesion.model'\nimport { SesionService } from 'src/app/services/sesion.service'\n\n@Component({\n  selector: 'app-bienvenido',\n  templateUrl: './bienvenido.component.html'\n})\nexport class BienvenidoComponent implements OnInit {\n\n  sesion: SesionModel = new SesionModel\n  sesiones: SesionModel[];\n\n  constructor(\n    private sesionService: SesionService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.listarSesiones()\n  }\n\n  guardarSesion( form: NgForm){\n    Swal.fire({\n      title: 'Procesando',\n      text: 'Creando Sala para sesión',\n      allowOutsideClick: false,\n      icon: 'info'\n    })\n    Swal.showLoading();\n    \n    let peticion: Observable<any>;\n    peticion = this.sesionService.crearSesion(this.sesion)\n    \n    peticion.subscribe(\n      res=>{\n        Swal.fire({\n          title: 'Creado',\n          text: 'Sala creada: '+this.sesion.nombre,\n          allowOutsideClick: false,\n          icon: 'success',\n          onClose: () => {\n            this.router.navigate([`/sesion/${res.id}`])\n          }\n        })\n        Swal.hideLoading();\n      }  \n    )\n  }\n\n  listarSesiones(){\n    this.sesionService.listarSesiones().subscribe(\n      res => this.sesiones = res\n    )\n  }\n\n}\n","<h1>CardVoting</h1>\n\n<div class=\"row animated fadeIn faster\">\n    <div class=\"col\">\n        <form (ngSubmit)=\"guardarSesion(f)\" #f=\"ngForm\">\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nombre de Sala\" [(ngModel)]=\"sesion.nombre\" name=\"nombre\">\n            </div>\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nombre del administrador\" [(ngModel)]=\"sesion.admin\" name=\"admin\">\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-outline-primary w-100\" type=\"submit\">\n                    <i class=\"fa fa-hands-helping mr-2\"></i>Crear e Ingresar\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n<hr>\n<div class=\"row animated fadeIn faster\">\n    <table class=\"table\">\n        <caption>Lista de sesiones</caption>\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Sala</th>\n            <th scope=\"col\">Administrador</th>\n            <th scope=\"col\">Identificador</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let sesion of sesiones; index as i\">\n            <th scope=\"row\">{{ i+1 }}</th>\n            <td>{{ sesion.nombre }}</td>\n            <td>{{ sesion.admin }}</td>\n            <td>{{ sesion.id }}</td>\n          </tr>\n        </tbody>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ParticipanteModel } from 'src/app/models/participante.model'\nimport { SesionModel } from 'src/app/models/sesion.model'\nimport { ParticipanteService } from 'src/app/services/participante.service'\nimport { SesionService } from 'src/app/services/sesion.service'\n\n@Component({\n  selector: 'app-participante',\n  templateUrl: './participante.component.html'\n})\nexport class ParticipanteComponent implements OnInit {\n  sesionId: string\n  participanteId: string\n\n  sesion: SesionModel = new SesionModel\n  participante: ParticipanteModel = new ParticipanteModel\n\n  opciones = [\n    {valor:\"I\"},\n    {valor:\"II\"},\n    {valor:\"III\"},\n    {valor:\"IV\"},\n    {valor:\"V\"},\n    {valor:\"VI\"},\n    {valor:\"VII\"},\n    {valor:\"VIII\"},\n    {valor:\"IX\"},\n    {valor:\"X\"},\n    {valor:\"XII\"},\n    {valor:\"XIII\"},\n    {valor:\"XIV\"},\n    {valor:\"XV\"}\n  ]\n\n  constructor(\n    private participanteService: ParticipanteService,\n    private sesionService: SesionService,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.sesionId = this.route.snapshot.paramMap.get('sesionid')\n    this.participanteId = this.route.snapshot.paramMap.get('participanteid')\n    this.getSesion()\n  }\n\n  getSesion(){\n    this.sesionService.getSesion(this.sesionId).subscribe(\n      res => {\n        this.sesion = res\n        for(var i in res.participante){\n          if(i==this.participanteId){\n            this.participante = res.participante[i]\n            this.participante.id=i\n            break\n          }\n        };\n      }\n    )\n  }\n\n  actualizarVoto( voto: string){\n    this.participante.voto = voto\n    this.participanteService.actualizarVoto(this.sesionId, this.participante).subscribe(\n      res => {}\n    )\n  }\n\n}\n","<h2>{{ sesion?.nombre }}</h2>\n<h3>{{ participante?.nombre }} - {{ sesion.pregunta }}</h3>\n<hr>\n<div class=\"row animated fadeIn faster\">\n    <div class=\"col\">\n        Tu voto es: {{ participante.voto }}\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col\">\n        <button *ngFor=\"let opc of opciones\" class=\"opcion btn btn-primary m-1\" (click)=\"actualizarVoto(opc.valor)\">{{ opc.valor }}</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2'\n\nimport { SesionModel } from 'src/app/models/sesion.model'\nimport { SesionService } from 'src/app/services/sesion.service'\nimport { ParticipanteService } from 'src/app/services/participante.service'\nimport { ParticipanteModel } from 'src/app/models/participante.model';\n\n@Component({\n  selector: 'app-sesion',\n  templateUrl: './sesion.component.html'\n})\nexport class SesionComponent implements OnInit {\n  objectKeys = Object.keys;\n  sesionId: string\n  sesion: SesionModel = new SesionModel\n  nuevoParticipante: string\n  preguntaSesion: string\n  \n  constructor(\n    private sesionService: SesionService,\n    private participanteService: ParticipanteService,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.sesionId = this.route.snapshot.paramMap.get('id')\n    this.getSesion()\n  }\n\n  actualizarPregunta( pregunta: string ){\n    if(pregunta==undefined || pregunta.trim()==''){\n      Swal.fire({\n        title: 'Ingrese pregunta',\n        text: 'Se mantendra la pregunta anterior',\n        allowOutsideClick: false,\n        icon: 'warning'\n      })\n      this.preguntaSesion = this.sesion.pregunta\n    }else{\n      this.sesion.pregunta = pregunta\n      this.sesionService.actualizarSesion(this.sesion).subscribe(\n        res => {}\n      )\n    }\n  }\n\n  getSesion(){\n    this.sesionService.getSesion(this.sesionId).subscribe(\n      res => {\n        this.sesion = res\n        this.preguntaSesion = this.sesion.pregunta\n      }\n    )\n  }\n\n  agregarParticipante(nombre: string){\n    if(nombre==undefined || nombre.trim()==''){\n      Swal.fire({\n        text: 'Ingrese nombre de participante',\n        allowOutsideClick: false,\n        icon: 'warning'\n      })\n    }else{\n      let part = new ParticipanteModel\n      part.nombre = nombre\n      this.participanteService.agregarParticipante(this.sesionId, part).subscribe(\n        res=>{\n          this.nuevoParticipante=''\n        }\n      )\n    }\n  }\n\n  verLinkParticipante(participanteId: string){\n    Swal.fire({\n      title: `Link de acceso de ${this.sesion.participante[participanteId].nombre}`,\n      text: `${location.href}/participante/${participanteId}`,\n      icon: 'info'\n    })\n  }\n\n}\n","<h2>{{ sesion?.nombre }} - {{ sesion.admin }}</h2>\n<hr>\n\n<div class=\"row animated fadeIn faster\">\n    <div class=\"col\">\n        <form (ngSubmit)=\"actualizarPregunta(preguntaSesion)\">\n            <div class=\"form-group my-1\">\n                <label>Pregunta</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"admin\" [(ngModel)]=\"preguntaSesion\" name=\"pregunta\">\n            </div>\n            <div class=\"form-group my-0\">\n                <button class=\"btn btn-outline-primary w-100\" type=\"submit\">\n                    <i class=\"fa fa-hands-helping mr-2\"></i>Enviar Pregunta\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n<hr>\n<div class=\"row\">\n    <div class=\"col\">\n        <div class=\"form-group my-1\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Nombre nuevo particpante\" [(ngModel)]=\"nuevoParticipante\" name=\"nuevo_participante\">\n        </div>\n        <div class=\"form-group my-0\">\n            <button class=\"btn btn-primary w-100 mb-1\" (click)=\"agregarParticipante(nuevoParticipante)\">Agregar Participante</button>\n        </div>\n    </div>\n</div>\n<div class=\"row animated fadeIn faster\">\n    <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Nombre</th>\n            <th scope=\"col\">Voto</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody *ngIf=\"sesion?.participante\">\n          <tr *ngFor=\"let reg of objectKeys(sesion.participante)\">\n            <td>{{ sesion.participante[reg].nombre }}</td>\n            <td>{{ sesion.participante[reg].voto }}</td>\n            <td><i class=\"fa fa-link mx-2\" (click)=\"verLinkParticipante(reg)\"></i></td>\n          </tr>\n        </tbody>\n    </table>\n</div>","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\nimport { ParticipanteModel } from '../models/participante.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ParticipanteService {\n    private url = \"https://cardvoting.firebaseio.com\"\n\n    constructor(\n        private http: HttpClient,\n        private firebaseDatabase: AngularFireDatabase\n    ){}\n\n    getParticipante( sesionId:string, participanteId: string ){\n        return this.http.get(`${this.url}/sesion/${sesionId}/participante/${participanteId}.json`)\n    }\n\n    actualizarVoto( sesionId:string, participante: ParticipanteModel ){\n        const participanteTmp = {\n            ...participante\n        }\n        delete participanteTmp.id\n        return this.http.put(`${this.url}/sesion/${sesionId}/participante/${participante.id}.json`, participanteTmp)\n    }\n\n    agregarParticipante( sesionId: string, participante: ParticipanteModel ){\n        return this.http.post(`${this.url}/sesion/${sesionId}/participante.json`, participante)\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\nimport { SesionModel } from '../models/sesion.model';\nimport { ParticipanteModel } from '../models/participante.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SesionService {\n    private url = \"https://cardvoting.firebaseio.com\"\n\n    constructor(\n        private http: HttpClient,\n        private firebaseDatabase: AngularFireDatabase\n    ){}\n\n    crearSesion( sesion: SesionModel ){\n        return this.http.post(`${this.url}/sesion.json`, sesion)\n        .pipe(\n            map(\n                (res: any) => {\n                    sesion.id = res.name\n                    return sesion\n                }\n            )\n        )\n    }\n\n    actualizarSesion( sesion: SesionModel ){\n        const sesionTmp = {\n            ...sesion\n        }\n        delete sesionTmp.id\n        return this.http.put(`${this.url}/sesion/${sesion.id}.json`, sesionTmp)\n    }\n\n    getSesion( id: string ){\n        return this.firebaseDatabase.list(`sesion/${id}`).snapshotChanges()\n        .pipe(\n            map(\n                res => {\n                    let sesion: SesionModel = new SesionModel\n                    // sesion.participante = []\n                    res.forEach(dato => {\n                        let reg = dato.payload.toJSON()\n                        sesion.id=id\n                        // if(dato.key=='participante'){\n                        //     let participantes:[] = reg as [];\n                        //     for(var i in participantes) {\n                        //         let participante = participantes[i] as ParticipanteModel\n                        //         participante.id = i\n                        //         sesion.participante.push(participante)\n                        //     }\n                        // }else{\n                        //     sesion[dato.key] = reg\n                        // }\n                        sesion[dato.key] = reg\n\n                    })\n                    return sesion\n                }\n            )\n        )\n    }\n\n    eliminarSesion( id: string ){\n        return this.http.delete(`${this.url}/sesion/${id}.json`)\n    }\n\n    listarSesiones() {\n        return this.firebaseDatabase.list('sesion').snapshotChanges()\n        .pipe(\n            map(\n                res => {\n                    let sesiones: SesionModel[] = [];\n                    res.forEach(fila => {\n                        let reg = fila.payload.toJSON(); \n                        reg['id'] = fila.key;\n                        sesiones.push(reg as SesionModel);\n                    })\n                    return sesiones\n                }\n            )\n        )\n    }\n    \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// export const environment = {\n//   production: false\n// };\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDNZexjA2LeyHtSnrK56LkAGUdW5L3B-Cs\",\n    authDomain: \"cardvoting.firebaseapp.com\",\n    databaseURL: \"https://cardvoting.firebaseio.com\",\n    projectId: \"cardvoting\",\n    storageBucket: \"cardvoting.appspot.com\",\n    messagingSenderId: \"164535101203\",\n    appId: \"1:164535101203:web:049e072cc8a97dc5399ce6\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}